version: '3.8'

services:
  # Redis
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    restart: unless-stopped

  # API сервис
  api:
    build: .
    ports:
      - "8000:8000"
    env_file:
      - .env
    environment:
      - REDIS_URL=redis://redis:6379
    depends_on:
      - redis
    volumes:
      - ./src/data:/app/src/data:ro
    restart: unless-stopped
    command: uvicorn src.main:app --host 0.0.0.0 --port 8000

  # Воркер миграции
  migration-worker:
    build: .
    env_file:
      - .env
    environment:
      - REDIS_URL=redis://redis:6379
    depends_on:
      - redis
    volumes:
      - ./src/data:/app/src/data:ro
    restart: unless-stopped
    command: python -m src.workers.migration_worker
    profiles:
      - migration

  # Воркер классификации - первый этап
  classification-worker-1:
    build: .
    env_file:
      - .env
    environment:
      - WORKER_ID=worker_${WORKER_NUMBER:-1}
      - REDIS_URL=redis://redis:6379
    depends_on:
      - redis
    volumes:
      - ./src/data:/app/src/data:ro
    restart: unless-stopped
    command: python -m src.workers.classification_worker --worker-id worker_${WORKER_NUMBER:-1}
    profiles:
      - workers

  # Воркер второго этапа классификации
  classification-worker-stage2-1:
    build: .
    env_file:
      - .env
    environment:
      - WORKER_ID=stage2_worker_${WORKER_NUMBER:-1}
      - REDIS_URL=redis://redis:6379
      - CLASSIFICATION_BATCH_SIZE=15
    depends_on:
      - redis
    volumes:
      - ./src/data:/app/src/data:ro
    restart: unless-stopped
    command: python -m src.workers.classification_worker_stage2 --worker-id stage2_worker_${WORKER_NUMBER:-1}
    profiles:
      - workers-stage2

volumes:
  redis_data: